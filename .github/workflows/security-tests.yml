name: Custom Security Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write

jobs:
  security-checks:
    name: Security Validation Tests
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety

      - name: Run Bandit (Python Security Linter)
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          bandit -r src/ -f txt

      - name: Check for hardcoded secrets
        run: |
          pip install detect-secrets
          detect-secrets scan --baseline .secrets.baseline || true

      - name: Run Safety (Known Vulnerabilities)
        run: |
          safety check --json --output safety-report.json || true
          safety check

      - name: Verify DLL Integrity
        run: |
          python -c "from src.utils.integrity_checker import IntegrityChecker; results = IntegrityChecker.verify_libs_directory(); print(results)"

      - name: Test Security Modules
        run: |
          python -c "from src.utils.path_validator import PathValidator; print('[OK] path_validator loaded')"
          python -c "from src.utils.log_sanitizer import LogSanitizer; print('[OK] log_sanitizer loaded')"
          python -c "from src.utils.backup_manager import BackupManager; print('[OK] backup_manager loaded')"
          python -c "from src.utils.elevation import elevate_with_validation; print('[OK] elevation loaded')"

      - name: Upload Bandit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-report
          path: bandit-report.json

      - name: Upload Safety results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: safety-report
          path: safety-report.json
