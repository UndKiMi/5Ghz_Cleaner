name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  lint:
    name: Linting & Formatting
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint black isort flake8
      
      - name: Check with Black
        run: |
          black --check --diff src/ || true
        continue-on-error: true
      
      - name: Check with isort
        run: |
          isort --check-only --diff src/ || true
        continue-on-error: true
      
      - name: Run Flake8
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics || true
        continue-on-error: true
      
      - name: Run Pylint
        run: |
          pylint src/ --exit-zero --output-format=colorized
        continue-on-error: true

  test:
    name: Unit Tests
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt
      
      - name: Test imports
        run: |
          python -c "from src.utils.integrity_checker import IntegrityChecker; print('✓ integrity_checker')"
          python -c "from src.utils.path_validator import PathValidator; print('✓ path_validator')"
          python -c "from src.utils.log_sanitizer import LogSanitizer; print('✓ log_sanitizer')"
          python -c "from src.utils.backup_manager import BackupManager; print('✓ backup_manager')"
        continue-on-error: true
      
      - name: Run tests
        run: |
          pytest tests/ --cov=src --cov-report=xml --cov-report=term || true
        continue-on-error: true
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true
