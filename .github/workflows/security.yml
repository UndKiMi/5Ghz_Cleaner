name: Security Audit

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Exécuter tous les lundis à 9h
    - cron: '0 9 * * 1'

jobs:
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:python"

  security-tools:
    name: Security Tools Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run Bandit (Security Linter)
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt
      continue-on-error: true
    
    - name: Run Safety (Dependency Check)
      run: |
        safety check --json > safety-report.json || true
        safety check
      continue-on-error: true
    
    - name: Run Pylint (Code Quality)
      run: |
        find . -name '*.py' -exec pylint {} + --output-format=text > pylint-report.txt || true
        find . -name '*.py' -exec pylint {} + --output-format=colorized || true
      continue-on-error: true
    
    - name: Upload Security Reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
          pylint-report.txt
      if: always()
